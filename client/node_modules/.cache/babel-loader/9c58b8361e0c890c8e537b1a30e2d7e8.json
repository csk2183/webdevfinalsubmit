{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Header from\"./Header\";import Footer from\"./Footer\";import Note from\"./Note\";import AddNoteForm from\"./AddNoteForm\";import axios from\"axios\";// Import axios for making HTTP requests\nfunction Main(){const[notes,setNotes]=useState([]);useEffect(()=>{// Fetch initial notes from the backend when the component mounts\nfetchNotes();},[]);const fetchNotes=async()=>{try{// Send a GET request to fetch notes from the backend\nconst response=await axios.get(\"/notes\");setNotes(response.data);// Update state with fetched notes\n}catch(error){console.error(\"Error fetching notes:\",error);}};const handleAddNote=newNote=>{setNotes([...notes,{key:newNote._id,// Use the MongoDB generated ID as the key\ntitle:newNote.title,content:newNote.content}]);};const handleDeleteNote=async key=>{try{// Send a DELETE request to the backend to delete the note\nawait axios.delete(\"/notes/\".concat(key));// Update state to remove the deleted note\nsetNotes(prevNotes=>prevNotes.filter(note=>note.key!==key));}catch(error){console.error(\"Error deleting note:\",error);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(\"div\",{className:\"notes-container\"},notes.map(note=>/*#__PURE__*/React.createElement(Note,{key:note.key,id:note.key,title:note.title,content:note.content,onDelete:handleDeleteNote}))),/*#__PURE__*/React.createElement(AddNoteForm,{onAddNote:handleAddNote}),/*#__PURE__*/React.createElement(Footer,null));}export default Main;","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Note","AddNoteForm","axios","Main","notes","setNotes","fetchNotes","response","get","data","error","console","handleAddNote","newNote","key","_id","title","content","handleDeleteNote","delete","concat","prevNotes","filter","note","createElement","className","map","id","onDelete","onAddNote"],"sources":["/Users/changkim/Desktop/tester/client/src/components/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport AddNoteForm from \"./AddNoteForm\";\nimport axios from \"axios\"; // Import axios for making HTTP requests\n\nfunction Main() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    // Fetch initial notes from the backend when the component mounts\n    fetchNotes();\n  }, []);\n\n  const fetchNotes = async () => {\n    try {\n      // Send a GET request to fetch notes from the backend\n      const response = await axios.get(\"/notes\");\n      setNotes(response.data); // Update state with fetched notes\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n\n  const handleAddNote = (newNote) => {\n    setNotes([\n      ...notes,\n      {\n        key: newNote._id, // Use the MongoDB generated ID as the key\n        title: newNote.title,\n        content: newNote.content,\n      },\n    ]);\n  };\n\n  const handleDeleteNote = async (key) => {\n    try {\n      // Send a DELETE request to the backend to delete the note\n      await axios.delete(`/notes/${key}`);\n      // Update state to remove the deleted note\n      setNotes((prevNotes) => prevNotes.filter((note) => note.key !== key));\n    } catch (error) {\n      console.error(\"Error deleting note:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"notes-container\">\n        {notes.map((note) => (\n          <Note\n            key={note.key}\n            id={note.key}\n            title={note.title}\n            content={note.content}\n            onDelete={handleDeleteNote}\n          />\n        ))}\n      </div>\n      <AddNoteForm onAddNote={handleAddNote} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAE;AAE3B,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd;AACAS,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,GAAG,CAAC,QAAQ,CAAC,CAC1CH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAE;AAC3B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAED,KAAM,CAAAE,aAAa,CAAIC,OAAO,EAAK,CACjCR,QAAQ,CAAC,CACP,GAAGD,KAAK,CACR,CACEU,GAAG,CAAED,OAAO,CAACE,GAAG,CAAE;AAClBC,KAAK,CAAEH,OAAO,CAACG,KAAK,CACpBC,OAAO,CAAEJ,OAAO,CAACI,OACnB,CAAC,CACF,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAJ,GAAG,EAAK,CACtC,GAAI,CACF;AACA,KAAM,CAAAZ,KAAK,CAACiB,MAAM,WAAAC,MAAA,CAAWN,GAAG,CAAE,CAAC,CACnC;AACAT,QAAQ,CAAEgB,SAAS,EAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACT,GAAG,GAAKA,GAAG,CAAC,CAAC,CACvE,CAAE,MAAOJ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAED,mBACEf,KAAA,CAAA6B,aAAA,QAAKC,SAAS,CAAC,KAAK,eAClB9B,KAAA,CAAA6B,aAAA,CAAC1B,MAAM,KAAE,CAAC,cACVH,KAAA,CAAA6B,aAAA,QAAKC,SAAS,CAAC,iBAAiB,EAC7BrB,KAAK,CAACsB,GAAG,CAAEH,IAAI,eACd5B,KAAA,CAAA6B,aAAA,CAACxB,IAAI,EACHc,GAAG,CAAES,IAAI,CAACT,GAAI,CACda,EAAE,CAAEJ,IAAI,CAACT,GAAI,CACbE,KAAK,CAAEO,IAAI,CAACP,KAAM,CAClBC,OAAO,CAAEM,IAAI,CAACN,OAAQ,CACtBW,QAAQ,CAAEV,gBAAiB,CAC5B,CACF,CACE,CAAC,cACNvB,KAAA,CAAA6B,aAAA,CAACvB,WAAW,EAAC4B,SAAS,CAAEjB,aAAc,CAAE,CAAC,cACzCjB,KAAA,CAAA6B,aAAA,CAACzB,MAAM,KAAE,CACN,CAAC,CAEV,CAEA,cAAe,CAAAI,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}